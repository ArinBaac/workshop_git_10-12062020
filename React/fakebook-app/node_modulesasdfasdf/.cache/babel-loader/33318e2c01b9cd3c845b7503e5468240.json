{"ast":null,"code":"var _jsxFileName = \"/Users/arin/Documents/Code Camp/git/React/fakebook-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass FakeBook_comment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addComment = () => {\n      this.props.addFoodItem(this.state.commentContent, this.state.foodCostTb);\n    };\n\n    this.updateComment = () => {\n      this.props.doUpdateFoodItem(this.state.commentContent, this.state.foodCostTb);\n    };\n\n    this.state = {\n      commentContent: props.commentContent,\n      foodCostTb: props.foodCostTb,\n      isUpdate: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (prevProps.commentContent != this.props.commentContent) {\n      this.setState({\n        commentContent: this.props.commentContent,\n        foodCostTb: this.props.foodCostTb,\n        isUpdate: true\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \"Food Name\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.commentContent,\n      onChange: e => {\n        this.setState({\n          commentContent: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Food Cost \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.foodCostTb,\n      onChange: e => {\n        this.setState({\n          foodCostTb: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.state.isUpdate ? this.updateComment : this.addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \" \", this.state.isUpdate ? \"Update\" : \"Add\")));\n  }\n\n}\n\nclass CommentTable extends React.Component {\n  constructor(props) {\n    super(props); // foodItems\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, this.props.foodItems.map(foodItem => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginRight: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, foodItem.foodName), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, foodItem.foodCost), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (foodItem.isEditing) {} else {\n          this.props.startEditFoodItem(foodItem.foodName);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, foodItem.isEditing ? \"Process\" : \"Edit\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.props.deleteFoodItem(foodItem.foodName);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Delete\"))));\n  }\n\n}\n\nclass Food extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteFoodItem = foodName => {\n      var newFoodItems = this.state.foodItems.filter(foodItem => foodItem.foodName !== foodName);\n      this.setState({\n        foodItems: newFoodItems\n      });\n    };\n\n    this.addFoodItem = (foodName, foodCost) => {\n      this.state.foodItems.push({\n        foodName: foodName,\n        foodCost: foodCost\n      });\n      this.setState({\n        foodItems: this.state.foodItems\n      });\n    };\n\n    this.startEditFoodItem = foodName => {\n      var updatedFoodItem = null;\n      var newFoodItems = this.state.foodItems.map(foodItem => {\n        if (foodItem.foodName === foodName) {\n          foodItem.isEditing = true;\n          updatedFoodItem = foodItem;\n          return foodItem;\n        } else {\n          return foodItem;\n        }\n      });\n      this.setState({\n        foodItems: newFoodItems,\n        commentContent: updatedFoodItem.foodName,\n        foodCostTb: updatedFoodItem.foodCost\n      });\n    };\n\n    this.doUpdateFoodItem = (foodName, foodCost) => {\n      var newFoodItems = this.state.foodItems.map(foodItem => {\n        if (foodItem.foodName === foodName) {\n          foodItem.isEditing = false;\n          foodItem.foodCost = foodCost;\n          return foodItem;\n        } else {\n          return foodItem;\n        }\n      });\n      this.setState({\n        foodItems: newFoodItems\n      });\n    };\n\n    this.state = {\n      foodItems: [{\n        foodName: \"Rice\",\n        foodCost: \"200\",\n        isEditing: false\n      }, {\n        foodName: \"Soup\",\n        foodCost: \"50\",\n        isEditing: false\n      }],\n      commentContent: \"\",\n      foodCostTb: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CommentTable, {\n      startEditFoodItem: this.startEditFoodItem,\n      deleteFoodItem: this.deleteFoodItem,\n      foodItems: this.state.foodItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FoodInput, {\n      doUpdateFoodItem: this.doUpdateFoodItem,\n      commentContent: this.state.commentContent,\n      foodCostTb: this.state.foodCostTb,\n      addFoodItem: this.addFoodItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/arin/Documents/Code Camp/git/React/fakebook-app/src/App.js"],"names":["React","FakeBook_comment","Component","constructor","props","addComment","addFoodItem","state","commentContent","foodCostTb","updateComment","doUpdateFoodItem","isUpdate","componentDidUpdate","prevProps","setState","render","e","target","value","CommentTable","foodItems","map","foodItem","marginRight","foodName","foodCost","isEditing","startEditFoodItem","deleteFoodItem","Food","newFoodItems","filter","push","updatedFoodItem","marginLeft","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AAGA,MAAMC,gBAAN,SAA+BD,KAAK,CAACE,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,UAnBmB,GAmBN,MAAM;AACjB,WAAKD,KAAL,CAAWE,WAAX,CAAuB,KAAKC,KAAL,CAAWC,cAAlC,EAAkD,KAAKD,KAAL,CAAWE,UAA7D;AACD,KArBkB;;AAAA,SAsBnBC,aAtBmB,GAsBH,MAAM;AACpB,WAAKN,KAAL,CAAWO,gBAAX,CAA6B,KAAKJ,KAAL,CAAWC,cAAxC,EAAwD,KAAKD,KAAL,CAAWE,UAAnE;AACD,KAxBkB;;AAEjB,SAAKF,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEJ,KAAK,CAACI,cADX;AAEXC,MAAAA,UAAU,EAAEL,KAAK,CAACK,UAFP;AAGXG,MAAAA,QAAQ,EAAG;AAHA,KAAb;AAKD;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA,QAAGA,SAAS,CAACN,cAAV,IAA4B,KAAKJ,KAAL,CAAWI,cAA1C,EAAyD;AACvD,WAAKO,QAAL,CAAc;AACZP,QAAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWI,cADf;AAEdC,QAAAA,UAAU,EAAE,KAAKL,KAAL,CAAWK,UAFT;AAGdG,QAAAA,QAAQ,EAAG;AAHG,OAAd;AAKD;AACF;;AAQDI,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADK,eAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,cAAzB;AAAyC,MAAA,QAAQ,EAAGS,CAAD,IAAO;AACxD,aAAKF,QAAL,CAAc;AACZP,UAAAA,cAAc,EAAES,CAAC,CAACC,MAAF,CAASC;AADb,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJK,eAWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXK,eAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWE,UAAzB;AAAqC,MAAA,QAAQ,EAAGQ,CAAD,IAAO;AACpD,aAAKF,QAAL,CAAc;AACZN,UAAAA,UAAU,EAAEQ,CAAC,CAACC,MAAF,CAASC;AADT,SAAd;AAGD,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAZK,eAmBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAQ,MAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWK,QAAX,GAAsB,KAAKF,aAA3B,GAA2C,KAAKL,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgF,KAAKE,KAAL,CAAWK,QAAX,GAAsB,QAAtB,GAAiC,KAAjH,CADA,CAnBK,CAAP;AAuBD;;AAlD4C;;AAqD/C,MAAMQ,YAAN,SAA2BpB,KAAK,CAACE,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CACH;AACf;;AACDY,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,KAAKZ,KAAL,CAAWiB,SAAX,CAAqBC,GAArB,CAA0BC,QAAD,iBACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCD,QAAQ,CAACE,QAA5C,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,QAAQ,CAACG,QAAhB,CAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,YAAIH,QAAQ,CAACI,SAAb,EAAwB,CACvB,CADD,MACO;AACL,eAAKvB,KAAL,CAAWwB,iBAAX,CAA6BL,QAAQ,CAACE,QAAtC;AACD;AACF,OALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKIF,QAAQ,CAACI,SAAT,GAAqB,SAArB,GAAiC,MALrC,MAHF,eASE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrB,aAAKvB,KAAL,CAAWyB,cAAX,CAA0BN,QAAQ,CAACE,QAAnC;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CADD,CADI,CAAP;AAgBD;;AArBwC;;AAwB3C,MAAMK,IAAN,SAAmB9B,KAAK,CAACE,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnByB,cAnBmB,GAmBDJ,QAAD,IAAc;AAC7B,UAAIM,YAAY,GAAG,KAAKxB,KAAL,CAAWc,SAAX,CAAqBW,MAArB,CAA6BT,QAAD,IAAcA,QAAQ,CAACE,QAAT,KAAsBA,QAAhE,CAAnB;AACA,WAAKV,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAEU;AADC,OAAd;AAGD,KAxBkB;;AAAA,SA0BnBzB,WA1BmB,GA0BL,CAACmB,QAAD,EAAWC,QAAX,KAAwB;AACpC,WAAKnB,KAAL,CAAWc,SAAX,CAAqBY,IAArB,CAA0B;AACxBR,QAAAA,QAAQ,EAAEA,QADc;AAExBC,QAAAA,QAAQ,EAAEA;AAFc,OAA1B;AAIA,WAAKX,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAE,KAAKd,KAAL,CAAWc;AADV,OAAd;AAGD,KAlCkB;;AAAA,SAoCnBO,iBApCmB,GAoCEH,QAAD,IAAc;AAChC,UAAIS,eAAe,GAAG,IAAtB;AACA,UAAIH,YAAY,GAAG,KAAKxB,KAAL,CAAWc,SAAX,CAAqBC,GAArB,CAA0BC,QAAD,IAAc;AACxD,YAAIA,QAAQ,CAACE,QAAT,KAAsBA,QAA1B,EAAoC;AAClCF,UAAAA,QAAQ,CAACI,SAAT,GAAqB,IAArB;AACAO,UAAAA,eAAe,GAAGX,QAAlB;AACA,iBAAOA,QAAP;AACD,SAJD,MAIO;AACL,iBAAOA,QAAP;AACD;AACF,OARkB,CAAnB;AASA,WAAKR,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAEU,YADC;AAEZvB,QAAAA,cAAc,EAAE0B,eAAe,CAACT,QAFpB;AAGZhB,QAAAA,UAAU,EAAEyB,eAAe,CAACR;AAHhB,OAAd;AAKD,KApDkB;;AAAA,SAqDnBf,gBArDmB,GAqDA,CAACc,QAAD,EAAWC,QAAX,KAAwB;AACzC,UAAIK,YAAY,GAAG,KAAKxB,KAAL,CAAWc,SAAX,CAAqBC,GAArB,CAA0BC,QAAD,IAAc;AACxD,YAAIA,QAAQ,CAACE,QAAT,KAAsBA,QAA1B,EAAoC;AAClCF,UAAAA,QAAQ,CAACI,SAAT,GAAqB,KAArB;AACAJ,UAAAA,QAAQ,CAACG,QAAT,GAAoBA,QAApB;AACA,iBAAOH,QAAP;AACD,SAJD,MAIO;AACL,iBAAOA,QAAP;AACD;AACF,OARkB,CAAnB;AASA,WAAKR,QAAL,CAAc;AACZM,QAAAA,SAAS,EAAGU;AADA,OAAd;AAGD,KAlEkB;;AAEjB,SAAKxB,KAAL,GAAa;AACXc,MAAAA,SAAS,EAAE,CACT;AACEI,QAAAA,QAAQ,EAAE,MADZ;AAEEC,QAAAA,QAAQ,EAAE,KAFZ;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADS,EAMT;AACEF,QAAAA,QAAQ,EAAE,MADZ;AAEEC,QAAAA,QAAQ,EAAE,IAFZ;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANS,CADA;AAaXnB,MAAAA,cAAc,EAAE,EAbL;AAcXC,MAAAA,UAAU,EAAE;AAdD,KAAb;AAgBD;;AAkDDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,iBAAiB,EAAE,KAAKP,iBAAtC;AAAyD,MAAA,cAAc,EAAE,KAAKC,cAA9E;AAA8F,MAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWc,SAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAE,KAAKV,gBAAlC;AAAoD,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWC,cAA/E;AAA+F,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAtH;AAAkI,MAAA,WAAW,EAAE,KAAKH,WAApJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA5EgC;;AA+EnC,eAAe8B,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass FakeBook_comment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      commentContent: props.commentContent,\n      foodCostTb: props.foodCostTb,\n      isUpdate : false\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if(prevProps.commentContent != this.props.commentContent){\n      this.setState({\n        commentContent: this.props.commentContent,\n      foodCostTb: this.props.foodCostTb,\n      isUpdate : true\n      });\n    }\n  }\n\n  addComment = () => {\n    this.props.addFoodItem(this.state.commentContent, this.state.foodCostTb);\n  }\n  updateComment = () => {\n    this.props.doUpdateFoodItem (this.state.commentContent, this.state.foodCostTb);\n  }\n  render() {\n    return <div>\n      <div>\n        Food Name\n      </div>\n      <div>\n        <input value={this.state.commentContent} onChange={(e) => {\n          this.setState({\n            commentContent: e.target.value\n          });\n        }}></input>\n      </div>\n      <div>Food Cost </div>\n      <div>\n        <input value={this.state.foodCostTb} onChange={(e) => {\n          this.setState({\n            foodCostTb: e.target.value\n          })\n        }}></input>\n      </div>\n      <div>\n      <button onClick={this.state.isUpdate ? this.updateComment : this.addComment} > {this.state.isUpdate ? \"Update\" : \"Add\"}</button>\n      </div>\n    </div>\n  }\n}\n\nclass CommentTable extends React.Component {\n  constructor(props) {\n    super(props); // foodItems\n  }\n  render() {\n    return <div>\n      {this.props.foodItems.map((foodItem) =>\n        <div>\n          <span style={{ marginRight: 20 }}>{foodItem.foodName}</span>\n          <span>{foodItem.foodCost}</span>\n          <button onClick={() => {\n            if (foodItem.isEditing) {\n            } else {\n              this.props.startEditFoodItem(foodItem.foodName);\n            }\n          }}>{foodItem.isEditing ? \"Process\" : \"Edit\"} </button>\n          <button onClick={() => {\n            this.props.deleteFoodItem(foodItem.foodName)\n          }}>Delete</button>\n        </div>)}\n    </div>\n  }\n}\n\nclass Food extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foodItems: [\n        {\n          foodName: \"Rice\",\n          foodCost: \"200\",\n          isEditing: false,\n        },\n        {\n          foodName: \"Soup\",\n          foodCost: \"50\",\n          isEditing: false\n        }\n      ],\n      commentContent: \"\",\n      foodCostTb: \"\",\n    };\n  }\n  deleteFoodItem = (foodName) => {\n    var newFoodItems = this.state.foodItems.filter((foodItem) => foodItem.foodName !== foodName);\n    this.setState({\n      foodItems: newFoodItems\n    });\n  }\n\n  addFoodItem = (foodName, foodCost) => {\n    this.state.foodItems.push({\n      foodName: foodName,\n      foodCost: foodCost\n    });\n    this.setState({\n      foodItems: this.state.foodItems\n    });\n  }\n\n  startEditFoodItem = (foodName) => {\n    var updatedFoodItem = null;\n    var newFoodItems = this.state.foodItems.map((foodItem) => {\n      if (foodItem.foodName === foodName) {\n        foodItem.isEditing = true;\n        updatedFoodItem = foodItem;\n        return foodItem;\n      } else {\n        return foodItem;\n      }\n    });\n    this.setState({\n      foodItems: newFoodItems,\n      commentContent: updatedFoodItem.foodName,\n      foodCostTb: updatedFoodItem.foodCost\n    });\n  }\n  doUpdateFoodItem = (foodName, foodCost) => {\n    var newFoodItems = this.state.foodItems.map((foodItem) => {\n      if (foodItem.foodName === foodName) {\n        foodItem.isEditing = false;\n        foodItem.foodCost = foodCost;\n        return foodItem;\n      } else {\n        return foodItem;\n      }\n    });\n    this.setState({\n      foodItems : newFoodItems\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ marginLeft: 50 }}>\n        <CommentTable startEditFoodItem={this.startEditFoodItem} deleteFoodItem={this.deleteFoodItem} foodItems={this.state.foodItems}></CommentTable>\n        <FoodInput doUpdateFoodItem={this.doUpdateFoodItem} commentContent={this.state.commentContent} foodCostTb={this.state.foodCostTb} addFoodItem={this.addFoodItem}></FoodInput>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}